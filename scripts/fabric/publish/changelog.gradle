String getChangelogText() {
    def changelogFile = project.file("changelog.md")
    String str = ''
    if (!changelogFile.exists()) {
        System.out.println("No changelog file found, creating one at \"" + changelogFile.getAbsolutePath() + "\"")
        changelogFile.createNewFile()
        String newText = '------------------------------------------------------\n' +
                'Version ' + project.version + '\n' +
                '------------------------------------------------------\n' +
                'Additions\n' +
                '- None\n' +
                '\n' +
                'Changes\n' +
                '- None\n' +
                '\n' +
                'Bug Fixes\n' +
                '- None\n'
        String oldText = changelogFile.getText()
        changelogFile.setText(newText + oldText)
        return str
    }
    String separator = '---'
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (lineCount < 3) {
            lineCount++
            if (it.startsWith(separator)) {
                return ""
            }
        }
        if (!it.startsWith(separator)) {
            str += "$it" + (lineCount < 3 ? ':\n\n' : '\n')
            return
        }
        done = true // once we go past the first version block, parse no more
    }
    str += "\n\n see full changelog [here](" + findProperty("changelog_url") + " \"Changelog\")"
    return str
}

// Export methods by turning them into closures
ext {
    getChangelogText = this.&getChangelogText
}